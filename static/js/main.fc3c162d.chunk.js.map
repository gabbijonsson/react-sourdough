{"version":3,"sources":["images/Masonjar.png","components/LandingPage.jsx","components/MenuBar.jsx","util/ApiHandler.js","components/OngoingPage.jsx","components/NewBread.jsx","util/QueryUtil.js","components/SubmitRecipe.jsx","components/CopyrightText.jsx","components/RecipeBank.jsx","components/FlourList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","LandingPage","className","src","Masonjar","alt","to","MenuBar","width","id","getFlours","savedFlours","localStorage","getItem","JSON","parse","setFlours","flours","setItem","stringify","getRecipes","savedRecipes","setRecipes","recipes","updateRecipe","rating","notes","finalized","recipeToUpdate","find","recipe","recipeid","deleteRecipe","others","filter","saveRecipe","ingredients","newRecipe","allRecipes","push","getNextId","allIds","map","Number","length","Math","max","deleteFlour","flourToDelete","flour","name","addFlour","newFlour","getRecipe","getUnfinishedRecipes","getFinishedRecipes","OngoingPage","useState","recipeList","setRecipeList","createBreadList","recipesToDisplay","forEach","key","onClick","recipeId","ApiHandler","useEffect","savedBreads","undefined","console","log","NewBread","history","useHistory","useForm","register","errors","handleSubmit","setId","hydrationChanged","updateHydration","setIngredients","getIngredientAmount","type","amount","ingredient","reduce","acc","curr","isNaN","onSubmit","ingredientToAdd","e","ingredientParts","split","newIngredient","concat","ref","required","validate","ingredientToValidate","some","includes","disabled","indexOf","value","displayFlours","totalStarter","totalFlour","totalLiquid","hydration","round","calculateHydration","ingredientToDelete","remainingIngredients","deleteIngredient","ingredienttype","onChange","event","target","handleIngredientChange","param","queryParameters","substring","SubmitRecipe","props","QueryUtil","location","search","setNotes","data","selected","placeholder","defaultValue","CopyrightText","Date","getFullYear","RecipeBank","FlourList","flourList","setFlourList","reset","htmlFor","flourToValidate","floursToDisplay","createFlourList","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fc3c162d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Masonjar.3368e71c.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Masonjar from \"../images/Masonjar.png\";\r\nimport \"./LandingPage.css\";\r\n\r\nfunction LandingPage() {\r\n\r\n  return (\r\n    <div className=\"landingpage__container\">\r\n      <img\r\n        className=\"landingpage__logo\"\r\n        src={Masonjar}\r\n        alt=\"Masonjar with text\"\r\n      />\r\n      <Link to=\"/new\">\r\n        <button className=\"landingpage__createbtn squarebutton\">\r\n          Create Bread\r\n        </button>\r\n      </Link>\r\n      <div className=\"landingpage__p-wrapper\">\r\n        <p className=\"landingpage__started\">\r\n          <Link to=\"/started\">Ongoing recipes</Link>\r\n        </p>\r\n        <p className=\"landingpage__pipe\">|</p>\r\n        <p className=\"landingpage__recipebank\">\r\n          <Link to=\"/recipebank\">Recipebank</Link>\r\n        </p>\r\n        <p className=\"landingpage__flours\">\r\n          <Link to=\"/flours\">Flours</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { bubble as Menu } from 'react-burger-menu';\r\nimport { Link } from 'react-router-dom';\r\nimport './MenuBar.css';\r\n\r\nfunction MenuBar() {\r\n    return (\r\n        <Menu width='350px'>\r\n            <Link to=\"/home\" id=\"home\" className=\"menu-item\">Home</Link>\r\n            <Link to=\"/started\" id=\"started\" className=\"menu-item\">Ongoing</Link>\r\n            <Link to=\"/recipebank\" id=\"recipebank\" className=\"menu-item\">Recipebank</Link>\r\n            <Link to=\"/flours\" id=\"flours\" className=\"menu-item\">Flours</Link>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default MenuBar;","const updateRecipe = (id, rating, notes, finalized) => {\r\n    let recipes = getRecipes();\r\n    let recipeToUpdate = recipes.find((recipe) => recipe.recipeid === id);\r\n    recipeToUpdate.rating = rating;\r\n    recipeToUpdate.notes = notes;\r\n    recipeToUpdate.finalized = finalized;\r\n    setRecipes(recipes);\r\n}\r\n\r\nconst deleteRecipe = (id) => {\r\n    let savedRecipes = getRecipes();\r\n    let others = savedRecipes.filter(recipe => recipe.recipeid !== id);\r\n    setRecipes(others);\r\n}\r\n\r\nconst saveRecipe = (id, ingredients) => {\r\n    let newRecipe = {\r\n        recipeid: id,\r\n        ingredients: ingredients\r\n    }\r\n\r\n    let allRecipes = getRecipes();\r\n    allRecipes.push(newRecipe);\r\n    localStorage.setItem(\"recipes\", JSON.stringify(allRecipes));\r\n}\r\n\r\nconst getNextId = () => {\r\n    let allIds = getRecipes().map((recipe) => Number(recipe.recipeid));\r\n    return allIds.length > 0 ? Math.max(...allIds)+1 : 1;\r\n}\r\n\r\nconst deleteFlour = (flourToDelete) => {\r\n    let savedFlours = getFlours();\r\n    let others = savedFlours.filter(flour => flour.name !== flourToDelete.name);\r\n    setFlours(others);\r\n}\r\n\r\nconst addFlour = (newFlour) => {\r\n    let savedFlours = getFlours();\r\n    savedFlours.push(newFlour);\r\n    setFlours(savedFlours);\r\n}\r\n\r\nconst getFlours = () => {\r\n    let savedFlours = localStorage.getItem(\"flours\");\r\n    return savedFlours ? JSON.parse(savedFlours) : [];\r\n}\r\n\r\nconst setFlours = (flours) => {\r\n    localStorage.setItem(\"flours\", JSON.stringify(flours));\r\n}\r\n\r\nconst getRecipe = (id) => {\r\n    let recipes = getRecipes();\r\n    let recipe = recipes.find((recipe) => recipe.recipeid === id)\r\n    return recipe;\r\n}\r\n\r\nconst getRecipes = () => {\r\n    let savedRecipes = localStorage.getItem(\"recipes\");\r\n    return savedRecipes ? JSON.parse(savedRecipes) : [];\r\n}\r\n\r\nconst setRecipes = (recipes) => {\r\n    localStorage.setItem(\"recipes\", JSON.stringify(recipes));\r\n}\r\n\r\nconst getUnfinishedRecipes = () => {\r\n    let unfinishedRecipes = getRecipes().filter((recipe) => !recipe.finalized);\r\n    return unfinishedRecipes;\r\n}\r\n\r\nconst getFinishedRecipes = () => {\r\n    let finishedRecipes = getRecipes().filter((recipe) => recipe.finalized);\r\n    return finishedRecipes;\r\n}\r\n\r\nexport default {\r\n    updateRecipe,\r\n    deleteRecipe,\r\n    saveRecipe,\r\n    getNextId,\r\n    deleteFlour,\r\n    addFlour,\r\n    getFlours,\r\n    getRecipe,\r\n    getRecipes,\r\n    getUnfinishedRecipes,\r\n    getFinishedRecipes\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Menu from \"./MenuBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./OngoingPage.css\";\r\nimport ApiHandler from \"../util/ApiHandler\"\r\n\r\nfunction OngoingPage() {\r\n  const [recipeList, setRecipeList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let savedBreads = ApiHandler.getUnfinishedRecipes();\r\n    setRecipeList(savedBreads);\r\n  }, []);\r\n\r\n  function deleteRecipe(recipeId) {\r\n    ApiHandler.deleteRecipe(Number(recipeId));\r\n    setRecipeList(recipeList.filter((recipe) => recipe.recipeid !== recipeId))\r\n  }\r\n\r\n  function createBreadList() {\r\n    let recipesToDisplay = [];\r\n\r\n    recipeList.forEach((recipe) => {\r\n      recipesToDisplay.push(\r\n        <li className=\"ongoingpage__recipe-row\" key={recipe.recipeid}>\r\n          <Link to={`/submit?recipeid=${recipe.recipeid}`}><h2>{recipe.recipeid}</h2></Link>\r\n          <button className=\"newbread__one-ingredient-row__deletebtn\" onClick={() => deleteRecipe(recipe.recipeid)}>X</button>\r\n        </li>\r\n      );\r\n    })\r\n\r\n    return (\r\n        <ul>\r\n          {recipesToDisplay}\r\n        </ul>\r\n    )\r\n  }\r\n\r\n  function determinContent() {\r\n    if (recipeList !== undefined && recipeList.length >= 0) {\r\n      return createBreadList();\r\n    } else {\r\n      console.log(recipeList)\r\n      return (\r\n        <>\r\n          <p>Ooops...! Seems like you don't have any started doughs.</p>\r\n          <Link to=\"/new\" className=\"ongoingpage__link\">\r\n            <button className=\"ongoingpage__createbtn squarebutton\">\r\n              Create Bread\r\n            </button>\r\n          </Link>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <div className=\"ongoingpage__container\">\r\n        <h1>Ongoing recipes</h1>\r\n        {determinContent()}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OngoingPage;\r\n","import React from \"react\";\r\nimport Menu from \"./MenuBar\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./NewBread.css\";\r\nimport ApiHandler from \"../util/ApiHandler\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction NewBread() {\r\n\r\n  const history = useHistory();\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [id, setId] = useState(1);\r\n  const [hydrationChanged, updateHydration] = useState(false);\r\n  const [ingredients, setIngredients] = useState([])\r\n\r\n  useEffect(() => { \r\n    setId(ApiHandler.getNextId());\r\n  }, []);  \r\n\r\n  function displayFlours() {\r\n    let flours = ApiHandler.getFlours();\r\n    return flours.map((flour) => <option key={flours.indexOf(flour)} value={'flour_'+flour.name}>{flour.name}</option>)\r\n  }\r\n\r\n  const onSubmit = (ingredientToAdd, e) => {\r\n    let ingredientParts = ingredientToAdd.ingredient.split('_');\r\n\r\n    let newIngredient = {name: ingredientParts[1], type: ingredientParts[0]};\r\n\r\n    setIngredients([...ingredients].concat([newIngredient]));\r\n\r\n  };\r\n\r\n  function handleIngredientChange(ingredient, event) {\r\n    ingredient.amount = Number(event.target.value ? event.target.value : 0);\r\n    updateHydration(!hydrationChanged)\r\n  }\r\n\r\n  function deleteIngredient(ingredientToDelete) {\r\n    let remainingIngredients = ingredients.filter((ingredient) => ingredient !== ingredientToDelete);\r\n    setIngredients(remainingIngredients)\r\n  }\r\n\r\n  function displayIngredient(ingredient) {\r\n    return (\r\n      <li className=\"newbread__one-ingredient-row\" key={ingredient.name}>\r\n        <button className=\"newbread__one-ingredient-row__deletebtn\" onClick={() => deleteIngredient(ingredient)}>X</button>\r\n        <p>{ingredient.name}</p>\r\n        <input className=\"newbread__one-ingredient-row__grams\" ingredienttype={ingredient.type} type=\"number\" onChange={(event) => handleIngredientChange(ingredient, event)}></input>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  function getIngredientAmount(type) {\r\n    let amountReducer = (acc, curr) => { return curr.amount ? acc + curr.amount : acc }\r\n    let amount = ingredients.filter(ingredient => ingredient.type === type).reduce(amountReducer, 0);\r\n    return isNaN(amount) ? 0 : amount;\r\n  }\r\n\r\n  function calculateHydration() {\r\n    let totalStarter = getIngredientAmount('starter')\r\n    let totalFlour = getIngredientAmount('flour') + (totalStarter/2)\r\n    let totalLiquid = getIngredientAmount('liquid') + (totalStarter/2)\r\n\r\n    let hydration = Math.round((totalLiquid / totalFlour) * 1000) / 10\r\n    return isNaN(hydration) ? 0 : hydration\r\n  }\r\n\r\n  function saveRecipe() {\r\n    ApiHandler.saveRecipe(id, ingredients);\r\n    history.push('/submit?recipeid='+id)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n  <h2 className=\"newbread__breadid\">RECIPE ID: {id}</h2>\r\n      <div className=\"newbread__container\">\r\n        <h1 className=\"newbread__recipetitle\">RECIPE</h1>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <p className=\"newbread__error\">{errors.ingredient && \"Ingredient already exist!\"}</p>\r\n          <select id=\"ingredient\" name=\"ingredient\" ref={register({ required: true, validate: ingredientToValidate => !ingredients.some(ingredient => ingredientToValidate.includes(ingredient.name)) })}>\r\n            <option disabled>--- FLOURS ---</option>\r\n            {displayFlours()}\r\n            <option disabled>--- LIQUIDS ---</option>\r\n            <option value=\"liquid_Water\">Water</option>\r\n            <option value=\"liquid_Milk\">Milk</option>\r\n            <option>Olive Oil</option>\r\n            <option disabled>--- OTHERS ---</option>\r\n            <option value=\"starter_Starter\">Starter</option>\r\n            <option value=\"other_Salt\">Salt</option>\r\n            <option value=\"other_Seeds\">Seeds</option>\r\n          </select>\r\n          <input id=\"ingredient-submitbtn\" className=\"squarebutton\" type=\"submit\" value=\"ADD\" />\r\n        </form>\r\n        <p className=\"newbread__hydration\">Hydration: {calculateHydration(hydrationChanged)}%</p>\r\n        <div className=\"newbread__ingredientlist\">\r\n          <div className=\"newbread__flours\">\r\n            <h2 className=\"newbread__ingredient-title\">Ingredients</h2>\r\n          </div>\r\n          <div className=\"newbread__grams\">\r\n            <h2 className=\"newbread__ingredient-title\">Grams</h2>\r\n          </div>\r\n          <div className=\"newbread__ingredient-list\">\r\n            <ul>\r\n              {ingredients.map(displayIngredient)}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <button className=\"createbread__continue squarebutton\" onClick={saveRecipe}>Continue</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewBread;\r\n","const getQueryParameter = (param, queryParameters) => {\r\n    //Get all query parameters, result: (?breadid=004&bedtime=soon)\r\n\r\n    if (!queryParameters.includes(param)) {\r\n      return null;\r\n    }\r\n\r\n    //Trim everything before the required parameter (breadid), result: (004&bedtime=soon)\r\n    queryParameters = queryParameters.substring(queryParameters.indexOf(param)+param.length+1);\r\n\r\n    //Trim everything after next \"&\", result: (004)\r\n    if (queryParameters.includes('&')) {\r\n      queryParameters = queryParameters.substring(0, queryParameters.indexOf('&'))\r\n    }\r\n    \r\n    return queryParameters;\r\n}\r\n\r\nexport default {\r\n    getQueryParameter\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Menu from \"./MenuBar\";\r\nimport \"./SubmitRecipe.css\";\r\nimport QueryUtil from \"../util/QueryUtil\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ApiHandler from \"../util/ApiHandler\";\r\n\r\nfunction SubmitRecipe(props) {\r\n  let recipeId = QueryUtil.getQueryParameter(\"recipeid\", props.location.search);\r\n  if (!recipeId) {\r\n    recipeId = \"---\";\r\n  }\r\n\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!isNaN(recipeId)) {\r\n      let recipe = ApiHandler.getRecipe(Number(recipeId));\r\n      console.log(\"recipe\", recipe);\r\n      if (recipe) {\r\n        setNotes(recipe.notes);\r\n      }\r\n    }\r\n  }, [recipeId]);\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"submit\", data);\r\n    updateRecipe(data.rating, data.notes, true);\r\n    history.push(\"/recipebank\");\r\n  };\r\n\r\n  const onStore = (data) => {\r\n    console.log(\"store\", data);\r\n    updateRecipe(data.rating, data.notes, false);\r\n    history.push(\"/started\");\r\n  };\r\n\r\n  const updateRecipe = (rating, notes, finalized) => {\r\n    if (!isNaN(recipeId)) {\r\n      ApiHandler.updateRecipe(Number(recipeId), rating, notes, finalized);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <h2 className=\"newbread__breadid\">RECIPE ID: {recipeId}</h2>\r\n      <form\r\n        className=\"submitbread__container\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <h1 className=\"submitbread__title\">SUBMIT RECIPE</h1>\r\n        <select id=\"rating\" name=\"rating\" ref={register()}>\r\n          <option value=\"\" selected=\"selected\" disabled>\r\n            -- Rating --\r\n          </option>\r\n          <option value=\"1\">1 - It went in the trash...</option>\r\n          <option value=\"2\">2 - Not my best work.</option>\r\n          <option value=\"3\">3 - I'd eat it again.</option>\r\n          <option value=\"4\">4 - Pretty good!</option>\r\n          <option value=\"5\">5 - Fantastic!!</option>\r\n        </select>\r\n        <p className=\"submitbread__ratetext\">Rate the result of this recipe.</p>\r\n        <h1 className=\"submitbread__title\">NOTES</h1>\r\n        <textarea\r\n          id=\"notes\"\r\n          name=\"notes\"\r\n          ref={register()}\r\n          placeholder=\"...\"\r\n          defaultValue={notes}\r\n        ></textarea>\r\n        <button\r\n          className=\"submitbread__continue squarebutton\"\r\n          onClick={handleSubmit(onSubmit)}\r\n        >\r\n          Submit\r\n        </button>\r\n        <button\r\n          className=\"createbread__store squarebutton\"\r\n          onClick={handleSubmit(onStore)}\r\n        >\r\n          Store\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SubmitRecipe;\r\n","import React from 'react';\r\n\r\nfunction CopyrightText() {\r\n    return <p className=\"copyright__datestamp\">© {new Date().getFullYear()} Jonssons</p>\r\n}\r\n\r\nexport default CopyrightText;","import React, { useEffect, useState } from 'react';\r\nimport Menu from './MenuBar';\r\nimport ApiHandler from '../util/ApiHandler';\r\nimport './RecipeBank.css';\r\n\r\nfunction RecipeBank() {\r\n\r\n    const [recipeList, setRecipeList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let savedBreads = ApiHandler.getFinishedRecipes();\r\n        setRecipeList(savedBreads);\r\n      }, []);\r\n\r\n    function deleteRecipe(recipeId) {\r\n    ApiHandler.deleteRecipe(Number(recipeId));\r\n    setRecipeList(recipeList.filter((recipe) => recipe.recipeid !== recipeId))\r\n    }\r\n\r\n    function createBreadList() {\r\n        let recipesToDisplay = [];\r\n\r\n        recipeList.forEach((recipe) => {\r\n            recipesToDisplay.push(\r\n                <li key={recipe.recipeid}>\r\n                    <h2>{recipe.recipeid}</h2>\r\n                    <button className=\"newbread__one-ingredient-row__deletebtn\" onClick={() => deleteRecipe(recipe.recipeid)}>X</button>\r\n                </li>\r\n            );\r\n        })\r\n\r\n        return (\r\n            <ul>\r\n                {recipesToDisplay}\r\n            </ul>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Menu />\r\n        <div className=\"recipebank__container\">\r\n            <h1>Recipebank</h1>\r\n            {createBreadList()}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeBank;","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Menu from \"./MenuBar\";\r\nimport \"./FlourList.css\";\r\nimport ApiHandler from '../util/ApiHandler'\r\n\r\nfunction FlourList() {\r\n  const [flourList, setFlourList] = useState([]);\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  useEffect(() => { \r\n    let savedFlours = ApiHandler.getFlours();\r\n    setFlourList(savedFlours);\r\n  }, []);\r\n\r\n  function deleteFlour(flourToDelete) {\r\n    ApiHandler.deleteFlour(flourToDelete);\r\n    setFlourList(flourList.filter((flour) => flour !== flourToDelete))\r\n  }\r\n\r\n  function createFlourList() {\r\n    let floursToDisplay = [];\r\n\r\n    flourList.forEach((flour) => {\r\n      floursToDisplay.push(\r\n        <li key={flour.name + flourList.indexOf(flour)}>\r\n          <h3>{flour.name}</h3>\r\n          <button className=\"newbread__one-ingredient-row__deletebtn\" onClick={() => deleteFlour(flour)}>X</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul>{floursToDisplay}</ul>;\r\n  }\r\n\r\n  const onSubmit = (newFlour, e) => {\r\n    console.log(newFlour);\r\n    ApiHandler.addFlour(newFlour);\r\n    e.target.reset();\r\n    setFlourList([...flourList].concat([newFlour]))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <div className=\"flourlist__wrapper\">\r\n        <h1>Edit saved flours</h1>\r\n        <form id=\"flourlist__form\" onSubmit={handleSubmit(onSubmit)}>\r\n            {errors.name && \"Please enter a unique name.\"}\r\n            <label htmlFor=\"flourname\">Name of flour: </label>\r\n            <input name=\"name\" id=\"name\" type=\"text\" placeholder=\"Enter name...\" ref={register({ required: true, validate: flourToValidate => !flourList.some((flour) => flour.name === flourToValidate) })} />\r\n            <input type=\"submit\" className=\"addflour-btn\" value=\"Add\"/>\r\n        </form>\r\n        <h2>Current list</h2>\r\n        <div className=\"flourlist__listcontainer\">{createFlourList()}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FlourList;\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport LandingPage from './components/LandingPage'\nimport OngoingPage from './components/OngoingPage'\nimport NewBread from './components/NewBread'\nimport SubmitRecipe from './components/SubmitRecipe'\nimport CopyrightText from './components/CopyrightText'\nimport RecipeBank from './components/RecipeBank'\nimport FlourList from './components/FlourList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact={true} path=\"/home\" component={LandingPage} />\n      <Route path=\"/new\" component={NewBread} />\n      <Route path=\"/started\" component={OngoingPage} />\n      <Route path=\"/submit\" component={SubmitRecipe} />\n      <Route path=\"/recipebank\" component={RecipeBank} />\n      <Route path=\"/flours\" component={FlourList} />\n      <CopyrightText />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}